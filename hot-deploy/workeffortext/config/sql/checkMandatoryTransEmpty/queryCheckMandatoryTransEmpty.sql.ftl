
SELECT 
    SK.WORK_EFFORT_ID AS SCHEDA_ID,
    SK.WORK_EFFORT_NAME AS SCHEDA,
    OB.WORK_EFFORT_ID AS OBIETTIVO_ID,
    OB.WORK_EFFORT_NAME AS OBIETTIVO,
    OB.WORK_EFFORT_NAME_LANG AS OBIETTIVO_LANG,
    AC.INPUT_ENUM_ID AS INPUT_ENUM_ID,
    AC.ACCOUNT_NAME AS ACCOUNT_NAME,
    AC.ACCOUNT_NAME_LANG AS ACCOUNT_NAME_LANG,
    WM.UOM_DESCR AS MISURA_OBJ, -- MISURA LEGATA A WORK_EFFORT
    WM.UOM_DESCR_LANG AS MISURA_OBJ_LANG,
    AC.ACCOUNT_NAME AS MISURA_UO, -- GL_ACCOUNT
    PR.UOM_DESCR AS MISURA_PRD, -- MISURA LEGATA AL GL_ACCOUNT PER ACCINP_PRD
    FT.DESCRIPTION AS TIPO_VALORE,
    PD.THRU_DATE AS PERIODO
FROM
<@table "WORK_EFFORT"/> SK
        INNER JOIN
        <@table "WORK_EFFORT"/> OB ON OB.WORK_EFFORT_PARENT_ID = SK.WORK_EFFORT_ID
        INNER JOIN
    (SELECT 
        WTC.WORK_EFFORT_TYPE_ID AS WORK_EFFORT_TYPE_ID,
            WTC.WORK_EFFORT_PURPOSE_TYPE_ID AS WORK_EFFORT_PURPOSE_TYPE_ID,
            WTC.CONTENT_ID AS CONTENT_ID,
            WTSC.STATUS_ID AS STATUS_ID,
            WTSC.CTRL_AMOUNT_ENUM_ID AS CTRL_AMOUNT_ENUM_ID,
			WTCA.PARAMS AS PARAMS
    FROM
    <@table "WORK_EFFORT_TYPE_CONTENT"/> WTC
    INNER JOIN <@table "WORK_EFFORT_TYPE_STATUS_CNT"/> WTSC ON WTC.WORK_EFFORT_TYPE_ID = WTSC.WORK_EFFORT_TYPE_ID
    LEFT OUTER JOIN <@table "WORK_EFFORT_TYPE_CONTENT"/> WTCA ON WTCA.WE_TYPE_CONTENT_TYPE_ID = WTSC.CONTENT_ID AND WTCA.WORK_EFFORT_TYPE_ID = WTSC.WORK_EFFORT_TYPE_ID
    WHERE
        WTSC.CTRL_AMOUNT_ENUM_ID <> 'AMOUNT_NONE'
            AND ((WTC.CONTENT_ID = 'WEFLD_IND'
            AND WTSC.CONTENT_ID = 'WEFLD_AIND')
            OR (WTC.CONTENT_ID = 'WEFLD_IND2'
            AND WTSC.CONTENT_ID = 'WEFLD_AIND2')
            OR (WTC.CONTENT_ID = 'WEFLD_IND3'
            AND WTSC.CONTENT_ID = 'WEFLD_AIND3')
            OR (WTC.CONTENT_ID = 'WEFLD_IND4'
            AND WTSC.CONTENT_ID = 'WEFLD_AIND4')
            OR (WTC.CONTENT_ID = 'WEFLD_IND5'
            AND WTSC.CONTENT_ID = 'WEFLD_AIND5'))) WF ON WF.WORK_EFFORT_TYPE_ID = OB.WORK_EFFORT_TYPE_ID
        INNER JOIN
    <@table "WORK_EFFORT_MEASURE"/> WM ON WM.WORK_EFFORT_ID = OB.WORK_EFFORT_ID AND (WM.IS_INVISIBLE IS NULL OR WM.IS_INVISIBLE <> 'Y')
        INNER JOIN
    <@table "GL_ACCOUNT"/> AC ON AC.GL_ACCOUNT_ID = WM.GL_ACCOUNT_ID
        AND AC.WE_WITHOUT_PERF = 'WEWITHPERF_ERROR'
        AND (AC.INPUT_ENUM_ID = 'ACCINP_OBJ'
        OR AC.INPUT_ENUM_ID = 'ACCINP_UO'
        OR AC.INPUT_ENUM_ID = 'ACCINP_PRD')
        LEFT JOIN
    <@table "WORK_EFFORT_MEASURE"/> PR ON PR.WORK_EFFORT_ID IS NULL
        AND PR.PRODUCT_ID IS NOT NULL
        AND PR.GL_ACCOUNT_ID = WM.GL_ACCOUNT_ID
        AND WM.PRODUCT_ID IS NOT NULL
        AND PR.PRODUCT_ID = WM.PRODUCT_ID
        AND (PR.IS_INVISIBLE IS NULL OR PR.IS_INVISIBLE <> 'Y')
        LEFT JOIN
    <@table "WORK_EFFORT_PURPOSE_ACCOUNT"/> WP ON WP.GL_ACCOUNT_ID = AC.GL_ACCOUNT_ID
        AND WP.WORK_EFFORT_PURPOSE_TYPE_ID = WF.WORK_EFFORT_PURPOSE_TYPE_ID
        AND (AC.INPUT_ENUM_ID = 'ACCINP_OBJ'
        OR AC.INPUT_ENUM_ID = 'ACCINP_UO')
        LEFT JOIN
    <@table "WORK_EFFORT_PURPOSE_MEASURE"/> WP_3 ON WP_3.WORK_EFFORT_MEASURE_ID = PR.WORK_EFFORT_MEASURE_ID
        AND WP_3.WORK_EFFORT_PURPOSE_TYPE_ID = WF.WORK_EFFORT_PURPOSE_TYPE_ID
        AND AC.INPUT_ENUM_ID = 'ACCINP_PRD'
        INNER JOIN
    <@table "GL_ACCOUNT_TYPE_GL_FISCAL_TYPE"/> AT ON AT.GL_ACCOUNT_TYPE_ID = AC.GL_ACCOUNT_TYPE_ID
        INNER JOIN
    <@table "GL_FISCAL_TYPE"/> FT ON FT.GL_FISCAL_TYPE_ID = AT.GL_FISCAL_TYPE_ID
        INNER JOIN
    <@table "WORK_EFFORT_TYPE_PERIOD"/> TP ON TP.WORK_EFFORT_TYPE_ID = SK.WORK_EFFORT_TYPE_ID
        INNER JOIN
    <@table "CUSTOM_TIME_PERIOD"/> PD ON PD.CUSTOM_TIME_PERIOD_ID = TP.CUSTOM_TIME_PERIOD_ID
        LEFT JOIN
    <@table "DATA_SOURCE"/> DS ON DS.DATA_SOURCE_ID = AC.DATA_SOURCE_ID
WHERE
    SK.WORK_EFFORT_ID = <@param workEffortId />
        AND WF.STATUS_ID = <@param statusId />
        AND WM.FROM_DATE <= PD.THRU_DATE
        AND WM.THRU_DATE >= PD.FROM_DATE
        AND TP.GL_FISCAL_TYPE_ENUM_ID = FT.GL_FISCAL_TYPE_ENUM_ID
        AND PD.PERIOD_TYPE_ID = WM.PERIOD_TYPE_ID
        AND (
    		AC.DATA_SOURCE_ID IS NULL
    		OR DS.VAL_MOD_ID = 'ALL_MOD'
    		OR (
    			DS.VAL_MOD_ID = 'ACTUAL_NO_MOD'
    			AND TP.GL_FISCAL_TYPE_ENUM_ID <> 'GLFISCTYPE_ACTUAL'
    		) OR (
    			DS.VAL_MOD_ID = 'BUDGET_NO_MOD'
    			AND TP.GL_FISCAL_TYPE_ENUM_ID <> 'GLFISCTYPE_TARGET'
    		)
    	) AND (
    		TP.STATUS_ENUM_ID = 'OPEN'
    		OR TP.STATUS_ENUM_ID = 'REOPEN'
    		OR (
    			TP.STATUS_ENUM_ID = 'DETECTABLE'
    			AND WF.CTRL_AMOUNT_ENUM_ID = 'ALSO_DETECTABLE'
    		)
    	)
        AND (
        	(
        		WP.WORK_EFFORT_PURPOSE_TYPE_ID IS NOT NULL
        		AND (
        			AC.INPUT_ENUM_ID = 'ACCINP_OBJ'
        			OR AC.INPUT_ENUM_ID = 'ACCINP_UO'
        		)
        	) OR (
        		WP_3.WORK_EFFORT_PURPOSE_TYPE_ID IS NOT NULL
        		AND AC.INPUT_ENUM_ID = 'ACCINP_PRD'
        	)
        )
        
        -- GN-1265
        AND ( -- NON SONO DEL TIPO 'INDICATOR_RESP' OPPURE 
			(((AC.INPUT_ENUM_ID = 'ACCINP_OBJ' OR AC.INPUT_ENUM_ID = 'ACCINP_UO') AND (AC.DATA_SOURCE_ID IS NULL OR AC.DATA_SOURCE_ID <> 'INDICATOR_RESP'))         	
			OR (AC.INPUT_ENUM_ID = 'ACCINP_PRD' AND (PR.DATA_SOURCE_ID IS NULL OR PR.DATA_SOURCE_ID <> 'INDICATOR_RESP')))
			-- SE SONO DEL TIPO 'INDICATOR_RESP' DEVO SODDISFARE LE CONDIZIONI DI UGUAGLIANZA DEI DEL CRESP
			OR (
				(
					-- DA AGGIUNGERE CON GN-1265 SE AC.INPUT_ENUM_ID = 'ACCINP_OBJ' OR = 'ACCINP_UO'
					((AC.RESP_CENTER_ID IS NULL AND AC.RESP_CENTER_ROLE_TYPE_ID IS NULL)  
						OR (AC.RESP_CENTER_ID = OB.ORG_UNIT_ID AND AC.RESP_CENTER_ROLE_TYPE_ID = OB.ORG_UNIT_ROLE_TYPE_ID)) 
					AND (AC.INPUT_ENUM_ID = 'ACCINP_OBJ' OR AC.INPUT_ENUM_ID = 'ACCINP_UO')
	        	
				) OR (
					-- DA AGGIUNGERE CON GN-1265 SE AC.INPUT_ENUM_ID = 'ACCINP_PRD'
					((PR.ORG_UNIT_ID IS NULL AND PR.ORG_UNIT_ROLE_TYPE_ID IS NULL)  
						OR (PR.ORG_UNIT_ID = OB.ORG_UNIT_ID AND PR.ORG_UNIT_ROLE_TYPE_ID = OB.ORG_UNIT_ROLE_TYPE_ID))
					AND AC.INPUT_ENUM_ID = 'ACCINP_PRD'
				)
			)        	

        )
                        
        
        AND NOT EXISTS( SELECT 
            1
        FROM
        <@table "WORK_EFFORT_TRANS_INDIC_VIEW"/> ET
        LEFT OUTER JOIN <@table "CUSTOM_TIME_PERIOD"/> PD2 ON PD2.THRU_DATE = ET.TT_TRANSACTION_DATE
        WHERE
            (ET.TT_TRANSACTION_DATE = PD.THRU_DATE 
			 OR (PARAMS like '%showPeriods="NONE"%' AND ET.TT_TRANSACTION_DATE = PD2.THRU_DATE))
                AND ET.M_WORK_EFFORT_MEASURE_ID = WM.WORK_EFFORT_MEASURE_ID
                AND ET.TT_GL_FISCAL_TYPE_ID = FT.GL_FISCAL_TYPE_ID
                AND ET.TM_GL_ACCOUNT_ID <> 'SCOREKPI')

GROUP BY SK.WORK_EFFORT_ID, SK.WORK_EFFORT_NAME , OB.WORK_EFFORT_ID, OB.WORK_EFFORT_NAME, OB.WORK_EFFORT_NAME_LANG, AC.GL_ACCOUNT_ID, AC.ACCOUNT_NAME, AC.ACCOUNT_NAME_LANG, AT.GL_FISCAL_TYPE_ID, AT.GL_ACCOUNT_TYPE_ID, AC.INPUT_ENUM_ID, WM.UOM_DESCR, WM.UOM_DESCR_LANG, AC.ACCOUNT_NAME, PR.UOM_DESCR, FT.DESCRIPTION, PD.THRU_DATE

ORDER BY OBIETTIVO_ID, MISURA_OBJ, MISURA_UO, MISURA_PRD, TIPO_VALORE, PERIODO

