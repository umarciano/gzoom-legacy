SELECT Y.WORK_EFFORT_ANALYSIS_ID, A.WORK_EFFORT_ID, A.WORK_EFFORT_PARENT_ID, A.ETCH, A.SOURCE_REFERENCE_ID, A.WORK_EFFORT_SNAPSHOT_ID, B.WORK_EFFORT_TYPE_ID, B.PARENT_TYPE_ID, 
B.ETCH AS COMMENTS, A.WORK_EFFORT_NAME, A.DESCRIPTION, B.UOM_RANGE_SCORE_ID, A.UOM_RANGE_SCORE_ID AS WE_UOM_RANGE_SCORE_ID, A.ESTIMATED_START_DATE, A.ESTIMATED_COMPLETION_DATE, 
A.ACTUAL_START_DATE, A.ACTUAL_COMPLETION_DATE, N.USER_LOGIN_ID, I.R_GL_FISCAL_TYPE_ID AS GL_FISCAL_TYPE_ID, I.R_AMOUNT AS AMOUNT,
I.R_HAS_SCORE_ALERT AS HAS_SCORE_ALERT, Y.REFERENCE_DATE AS TRANSACTION_DATE, AP.SOURCE_REFERENCE_ID AS PARENT_SOURCE_REFRENECE_ID
FROM ((((<@table "WORK_EFFORT_ANALYSIS"/> Y 
INNER JOIN <@table "WORK_EFFORT"/> A ON Y.WORK_EFFORT_TYPE_ID = A.WORK_EFFORT_TYPE_ID) 
INNER JOIN <@table "WORK_EFFORT_TYPE"/> B ON A.WORK_EFFORT_TYPE_ID = B.WORK_EFFORT_TYPE_ID) 
LEFT OUTER JOIN (SELECT Q.WORK_EFFORT_ID AS Q_WORK_EFFORT_ID, Q.TRANSACTION_DATE AS Q_TRANSACTION_DATE, R.AMOUNT AS R_AMOUNT, 
R.GL_FISCAL_TYPE_ID AS R_GL_FISCAL_TYPE_ID, R.HAS_SCORE_ALERT AS R_HAS_SCORE_ALERT 
FROM <@table "ACCTG_TRANS"/> Q 
INNER JOIN <@table "ACCTG_TRANS_ENTRY"/> R ON Q.ACCTG_TRANS_ID = R.ACCTG_TRANS_ID WHERE ((R.GL_ACCOUNT_ID = 'SCORE'))) I 
ON A.WORK_EFFORT_ID = I.Q_WORK_EFFORT_ID AND (I.Q_TRANSACTION_DATE = Y.REFERENCE_DATE)) 
INNER JOIN <@table "USER_LOGIN_VALID_PARTY_ROLE"/> M ON A.ORGANIZATION_ID = M.PARTY_ID AND (M.ROLE_TYPE_ID = 'INTERNAL_ORGANIZATIO')) 
INNER JOIN <@table "USER_LOGIN"/> N ON M.USER_LOGIN_ID = N.USER_LOGIN_ID 
LEFT OUTER JOIN <@table "PARTY_RELATIONSHIP"/> O
  ON O.ROLE_TYPE_ID_FROM = A.ORG_UNIT_ROLE_TYPE_ID
  AND O.PARTY_ID_FROM = A.ORG_UNIT_ID
  AND O.PARTY_RELATIONSHIP_TYPE_ID IN ('ORG_RESPONSIBLE', 'ORG_DELEGATE')
  AND O.THRU_DATE IS NULL
  AND O.PARTY_ID_TO = N.PARTY_ID
LEFT OUTER JOIN <@table "PARTY_RELATIONSHIP"/> SO
  ON SO.ROLE_TYPE_ID_TO = A.ORG_UNIT_ROLE_TYPE_ID
  AND SO.PARTY_ID_TO = A.ORG_UNIT_ID
  AND SO.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
  AND SO.THRU_DATE IS NULL
LEFT OUTER JOIN <@table "PARTY_RELATIONSHIP"/> S
  ON S.ROLE_TYPE_ID_FROM = SO.ROLE_TYPE_ID_FROM
  AND S.PARTY_ID_FROM = SO.PARTY_ID_FROM
  AND S.PARTY_RELATIONSHIP_TYPE_ID IN ('ORG_RESPONSIBLE', 'ORG_DELEGATE')
  AND S.THRU_DATE IS NULL 
  AND S.PARTY_ID_TO = N.PARTY_ID
LEFT OUTER JOIN <@table "PARTY_RELATIONSHIP"/> TS
  ON TS.ROLE_TYPE_ID_TO = SO.ROLE_TYPE_ID_FROM
  AND TS.PARTY_ID_TO = SO.PARTY_ID_FROM
  AND TS.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
  AND TS.THRU_DATE IS NULL 
LEFT OUTER JOIN <@table "PARTY_RELATIONSHIP"/> T
  ON T.ROLE_TYPE_ID_FROM = TS.ROLE_TYPE_ID_FROM
  AND T.PARTY_ID_FROM = TS.PARTY_ID_FROM
  AND T.PARTY_RELATIONSHIP_TYPE_ID IN ('ORG_RESPONSIBLE', 'ORG_DELEGATE')
  AND T.THRU_DATE IS NULL 
  AND T.PARTY_ID_TO = N.PARTY_ID 
LEFT OUTER JOIN <@table "WORK_EFFORT_PARTY_ASSIGNMENT"/> R
  ON R.WORK_EFFORT_ID = A.WORK_EFFORT_ID
  AND R.THRU_DATE = A.ESTIMATED_COMPLETION_DATE
  AND R.ROLE_TYPE_ID LIKE 'WEM%'
  AND R.PARTY_ID = N.PARTY_ID
INNER JOIN <@table "WORK_EFFORT"/> AP
  ON AP.WORK_EFFORT_ID = A.WORK_EFFORT_PARENT_ID
WHERE (A.WORK_EFFORT_SNAPSHOT_ID IS NULL  
<#if userLogin?has_content && userLogin.userLoginId?has_content>
    AND N.USER_LOGIN_ID = '${userLogin.userLoginId}'
</#if>
<#if workEffortAnalysisId?has_content>
  	AND Y.WORK_EFFORT_ANALYSIS_ID = <@param workEffortAnalysisId />
</#if> 
) 
AND ((Y.WORK_EFFORT_ID IS NULL OR Y.WORK_EFFORT_ID = A.WORK_EFFORT_ID)) 
AND (((Y.WORK_EFFORT_ID IS NULL OR Y.WORK_EFFORT_ID = A.WORK_EFFORT_ID))) 
AND (1 = 0
  	 <#if isOrgMgr?default(false) == true>
         OR O.PARTY_ID_TO IS NOT NULL 
     </#if>
     <#if isSup?default(false) == true>
    	 OR S.PARTY_ID_TO IS NOT NULL 
     </#if>
     <#if isRole?default(false) == true>
         OR R.PARTY_ID IS NOT NULL
     </#if>
     <#if isTop?default(false) == true>
    	 OR T.PARTY_ID_TO IS NOT NULL
     </#if>       
)
ORDER BY A.SOURCE_REFERENCE_ID ASC, A.WORK_EFFORT_ID ASC
