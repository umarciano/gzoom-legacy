SELECT A.WORK_EFFORT_ID, A.WORK_EFFORT_MEASURE_ID, A.UOM_RANGE_ID, A.UOM_DESCR, A.UOM_DESCR_LANG, A.GL_ACCOUNT_ID, A.PRODUCT_ID, A.EMPL_POSITION_TYPE_ID,
A.ROLE_TYPE_ID AS MEASURE_ROLE_TYPE_ID, A.PARTY_ID AS MEASURE_PARTY_ID, 
A.WE_MEASURE_TYPE_ENUM_ID, 
A.WE_SCORE_CONV_ENUM_ID,
A.WE_ALERT_RULE_ENUM_ID,
A.WE_SCORE_RANGE_ENUM_ID,
A.WE_MEASURE_TYPE_ENUM_ID,
A.WE_WITHOUT_PERF,
A.WE_OTHER_GOAL_ENUM_ID, A.FROM_DATE, A.THRU_DATE, B.SOURCE_REFERENCE_ID,
B.WORK_EFFORT_NAME, B.ETCH, B.WORK_EFFORT_TYPE_ID,D.ACT_ST_ENUM_ID, E.ACCOUNT_CODE, E.ACCOUNT_NAME, 
F.UOM_TYPE_ID,
F.ABBREVIATION,
H.DESCRIPTION, I.DESCRIPTION,
E.DEBIT_CREDIT_DEFAULT,
E.PERIODICAL_ABSOLUTE_ENUM_ID,
E.GL_RESOURCE_TYPE_ID 
, A.GL_ACCOUNT_ID
,E.GL_ACCOUNT_TYPE_ID,
 F.ABBREVIATION
,E.DESCRIPTION AS ACCOUNT_DESCRIPTION 
,GT.DESCRIPTION AS GL_ACCOUNT_TYPE_DESC
,E.DETAIL_ENUM_ID
,E.INPUT_ENUM_ID
,E.DATA_SOURCE_ID
,E.DEFAULT_UOM_ID
,E.CALC_CUSTOM_METHOD_ID
,A.COMMENTS
,A.SEQUENCE_ID
,F.DECIMAL_SCALE
,A.KPI_SCORE_WEIGHT
,A.KPI_OTHER_WEIGHT
,A.DATA_SOURCE_ID
,A.IS_POSTED
,E.ACCOUNT_TYPE_ENUM_ID  
,B.ORG_UNIT_ROLE_TYPE_ID
,B.ORG_UNIT_ID
, DT.DATA_SOURCE_ID AS DATA_SOURCE_ID, DT.VAL_MOD_ID AS VAL_MOD_ID, DTP.DATA_SOURCE_ID AS WM_DATA_SOURCE_ID, DTP.VAL_MOD_ID AS WM_VAL_MOD_ID,
CASE WHEN (INPUT_ENUM_ID = 'ACCINP_OBJ' OR INPUT_ENUM_ID = 'ACCINP_UO') THEN E.RESP_CENTER_ROLE_TYPE_ID ELSE B.ORG_UNIT_ROLE_TYPE_ID END AS ORG_UNIT_ROLE_TYPE_ID,
CASE WHEN (INPUT_ENUM_ID = 'ACCINP_OBJ' OR INPUT_ENUM_ID = 'ACCINP_UO') THEN E.RESP_CENTER_ID ELSE B.ORG_UNIT_ID END AS ORG_UNIT_ID

FROM <@table "WORK_EFFORT_MEASURE"/> A
INNER JOIN <@table "WORK_EFFORT"/> B ON A.WORK_EFFORT_ID = B.WORK_EFFORT_ID
INNER JOIN <@table "STATUS_ITEM"/> D ON B.CURRENT_STATUS_ID = D.STATUS_ID
INNER JOIN <@table "GL_ACCOUNT"/> E ON A.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID
INNER JOIN <@table "GL_ACCOUNT_TYPE"/> GT ON E.GL_ACCOUNT_TYPE_ID = GT.GL_ACCOUNT_TYPE_ID
INNER JOIN <@table "UOM"/> F ON E.DEFAULT_UOM_ID = F.UOM_ID
INNER JOIN <@table "WORK_EFFORT_TYPE_CONTENT"/> WTIC ON WTIC.WORK_EFFORT_TYPE_ID = B.WORK_EFFORT_TYPE_ID
INNER JOIN <@table "WORK_EFFORT_PURPOSE_ACCOUNT"/> WA ON WA.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID
	AND WA.WORK_EFFORT_PURPOSE_TYPE_ID =  WTIC.WORK_EFFORT_PURPOSE_TYPE_ID

LEFT OUTER JOIN <@table "PRODUCT"/> H ON A.PRODUCT_ID = H.PRODUCT_ID
LEFT OUTER JOIN <@table "EMPL_POSITION_TYPE"/> I ON A.EMPL_POSITION_TYPE_ID = I.EMPL_POSITION_TYPE_ID
                 
LEFT OUTER JOIN <@table "DATA_SOURCE"/> DT ON DT.DATA_SOURCE_ID = E.DATA_SOURCE_ID

LEFT OUTER JOIN <@table "DATA_SOURCE"/> DTP ON DTP.DATA_SOURCE_ID = A.DATA_SOURCE_ID

WHERE A.WORK_EFFORT_ID = <@param workEffortId /> AND 

(
WTIC.CONTENT_ID = <@param contentId />
<#if showScorekpi?if_exists?has_content && "Y" == showScorekpi>
	OR A.GL_ACCOUNT_ID = 'SCORE'
</#if>
)

<#if fromDate?if_exists?has_content>
	AND A.FROM_DATE <= <@param fromDate jdbcType.TIMESTAMP />
</#if>
<#if thruDate?if_exists?has_content>
	AND A.THRU_DATE >= <@param thruDate jdbcType.TIMESTAMP />
</#if>
AND (A.IS_INVISIBLE IS NULL OR A.IS_INVISIBLE <> 'Y')
		        
ORDER BY A.SEQUENCE_ID, E.ACCOUNT_CODE
