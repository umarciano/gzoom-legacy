<?xml version="1.0" encoding="UTF-8"?>

<project name="OFBiz - Base Component" default="jar" basedir=".">
    <import file="../../common.xml"/>

    <!-- ================================================================== -->
    <!-- Initialization of all property settings -->
    <!-- ================================================================== -->

    <property environment="env"/>
    <property name="desc" value="Base Component"/>
    <property name="name" value="ofbiz-base-gz"/>
    <property name="ofbiz.home.dir" value="../.."/>
    <property name="src.dir" value="src"/>
    <property name="dtd.dir" value="dtd"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="build"/>

    <path id="local.class.path">
        <fileset dir="${lib.dir}" includes="*.jar" excludes="${lib.dir}/jawr/**"/>
        <fileset dir="../../framework/base/lib" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/commons" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/j2eespecs" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/scripting" includes="*.jar"/>
        <fileset dir="../../framework/base/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/common/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/entity/lib" includes="*.jar"/>
        <fileset dir="../../framework/entity/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/security/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/service/lib" includes="*.jar"/>
        <fileset dir="../../framework/service/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/minilang/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/entityext/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/widget/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/webapp/lib" includes="*.jar"/>
        <fileset dir="../../framework/webapp/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/commons" includes="*.jar"/>
        <fileset dir="../../framework/datafile/build/lib" includes="*.jar"/>
        <!-- Marco: aggiunto viewhandler per birt -->
        <fileset dir="../../specialpurpose/birt/lib" includes="*.jar"/>
        <fileset dir="../../specialpurpose/birt/build/lib" includes="*.jar"/>
    	<fileset dir="../../framework/base/lib/pdf" includes="*.jar"/>
    </path>

    <patternset id="src.exc.set">
        <exclude name="net/jawr/web/**"/>
    </patternset>

    <target name="jar" depends="classes">
        <main-jar/>
        <test-jar>
            <test-selector>
                <filename name="META-INF/services"/>
                <filename name="META-INF/services/*"/>
            </test-selector>
        </test-jar>
    </target>

    <!-- ================================================================== -->

    <target name="ofbiz-pre-build">
    </target>

    <target name="ofbiz-post-build">
        <antcall>
            <target name="svninfo-all"/>
        </antcall>
    </target>

    <!-- ================================================================== -->

    <target name="svninfo-all" depends="svninfo-xml-file,svninfo-xml-custom-file">
        <echo message="" file="${ofbiz.home.dir}/runtime/svninfo.ftl" append="false"/>
    </target>

    <target name="svninfo-xml-file" depends="svninfo-xml" if="svn.info.xml.output.available">
        <echo message="${svn.info.xml.output}" file="${ofbiz.home.dir}/hot-deploy/base/config/svninfo.xml"/>
    </target>

    <target name="svninfo-xml-custom-file" depends="svninfo-xml-custom" if="svn.info.xml.custom.output.available">
        <echo message="${svn.info.xml.custom.output}" file="${ofbiz.home.dir}/hot-deploy/custom/config/svninfo.xml"/>
    </target>

    <target name="svninfo-xml">
        <exec executable="svn" failonerror="false" failifexecutionfails="false" resultproperty="svn.info.xml.result" outputproperty="svn.info.xml.output">
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="${ofbiz.home.dir}"/>
        </exec>
        <condition property="svn.info.xml.output.available">
            <equals arg1="${svn.info.xml.result}" arg2="0"/>
        </condition>
    </target>

    <target name="svninfo-xml-custom">
        <exec executable="svn" failonerror="false" failifexecutionfails="false" resultproperty="svn.info.xml.custom.result" outputproperty="svn.info.xml.custom.output">
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="${ofbiz.home.dir}/hot-deploy/custom"/>
        </exec>
        <condition property="svn.info.xml.custom.output.available">
            <equals arg1="${svn.info.xml.custom.result}" arg2="0"/>
        </condition>
    </target>

</project>
