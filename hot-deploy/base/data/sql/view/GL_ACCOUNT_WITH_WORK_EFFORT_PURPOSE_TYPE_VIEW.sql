create view GL_ACCOUNT_WITH_WORK_EFFORT_PURPOSE_TYPE_VIEW as
SELECT U.DESCRIPTION uom_Descr, 
GT.DESCRIPTION gl_Account_Type_Description, 
UR.DESCRIPTION uom_Range_Description, 
G.GL_ACCOUNT_ID, 
G.ACCOUNT_CODE, 
G.ACCOUNT_NAME,
G.ACCOUNT_NAME_LANG,
G.INPUT_ENUM_ID,
G.DETAIL_ENUM_ID, 
G.WE_MEASURE_TYPE_ENUM_ID, 
G.WE_SCORE_RANGE_ENUM_ID, 
G.WE_SCORE_CONV_ENUM_ID, 
G.WE_ALERT_RULE_ENUM_ID,
G.UOM_RANGE_ID, 
G.WE_WITHOUT_PERF,
CASE WHEN g.resp_center_id is null THEN 'NULL' ELSE g.resp_center_id END resp_center_id,
WTR.work_Effort_Type_Id as work_Effort_Type_Id_Res,
G.current_Status_Id,
GO.organization_Party_Id
FROM (((((((((
GL_ACCOUNT G 
INNER JOIN WORK_EFFORT_PURPOSE_ACCOUNT WA ON G.GL_ACCOUNT_ID = WA.GL_ACCOUNT_ID) 
INNER JOIN WORK_EFFORT_PURPOSE_TYPE WPT ON WA.WORK_EFFORT_PURPOSE_TYPE_ID = WPT.WORK_EFFORT_PURPOSE_TYPE_ID) 
LEFT OUTER JOIN WORK_EFFORT_TYPE WTR ON WA.WORK_EFFORT_PURPOSE_TYPE_ID = WTR.WE_PURPOSE_TYPE_ID_RES) 
LEFT OUTER JOIN WORK_EFFORT_TYPE_CONTENT WTIC ON WA.WORK_EFFORT_PURPOSE_TYPE_ID = WTIC.WORK_EFFORT_PURPOSE_TYPE_ID) 
LEFT OUTER JOIN WORK_EFFORT_TYPE WTI ON WTIC.WORK_EFFORT_TYPE_ID = WTI.WORK_EFFORT_TYPE_ID) 
LEFT OUTER JOIN UOM U ON G.DEFAULT_UOM_ID = U.UOM_ID) 
LEFT OUTER JOIN UOM_RANGE UR ON G.UOM_RANGE_ID = UR.UOM_RANGE_ID) 
INNER JOIN GL_ACCOUNT_TYPE GT ON G.GL_ACCOUNT_TYPE_ID = GT.GL_ACCOUNT_TYPE_ID) 
LEFT OUTER JOIN PERIOD_TYPE PT ON G.PERIOD_TYPE_ID = PT.PERIOD_TYPE_ID) 
INNER JOIN GL_ACCOUNT_ORGANIZATION GO ON G.GL_ACCOUNT_ID = GO.GL_ACCOUNT_ID 
WHERE 
((WTR.WE_PURPOSE_TYPE_ID_RES IS NOT NULL OR WTIC.WORK_EFFORT_PURPOSE_TYPE_ID IS NOT NULL)) 
AND (((WTR.WE_PURPOSE_TYPE_ID_RES IS NOT NULL OR WTIC.WORK_EFFORT_PURPOSE_TYPE_ID IS NOT NULL)))