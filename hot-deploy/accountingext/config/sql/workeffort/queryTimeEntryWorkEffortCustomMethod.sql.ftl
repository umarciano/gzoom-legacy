 SELECT
   AC.GL_ACCOUNT_ID AS GL_ACCOUNT_ID 
   , WM.WORK_EFFORT_MEASURE_ID AS VOUCHER_REF
   , TE.WORK_EFFORT_ID AS WORK_EFFORT_ID
  <#if calcType?if_exists?contains('ORE_PERC_CTR')>
   , SUM(TE.PERCENTAGE * TS.CONTRACT_HOURS / 100) AS AMOUNT
 <#elseif calcType?if_exists?contains('ORE_PERC_ACT')> 
   , SUM(TE.PERCENTAGE * TS.ACTUAL_HOURS / 100) AS AMOUNT
 <#else>
   , SUM(TE.HOURS) AS AMOUNT
 </#if>
 FROM <@table "GL_ACCOUNT"/> AC
 INNER JOIN <@table "CUSTOM_TIME_PERIOD"/> PD ON PD.PERIOD_TYPE_ID = AC.PERIOD_TYPE_ID 
 INNER JOIN <@table "WORK_EFFORT_MEASURE"/> WM ON WM.GL_ACCOUNT_ID = AC.GL_ACCOUNT_ID AND WM.FROM_DATE <= PD.THRU_DATE AND WM.THRU_DATE >= PD.FROM_DATE
 INNER JOIN <@table "TIME_ENTRY"/> TE ON TE.WORK_EFFORT_ID = WM.WORK_EFFORT_ID
 INNER JOIN <@table "TIMESHEET"/> TS ON TS.TIMESHEET_ID = TE.TIMESHEET_ID AND TS.FROM_DATE <= PD.THRU_DATE AND TS.THRU_DATE >= PD.FROM_DATE
 WHERE TS.THRU_DATE = <@param refDate jdbcType.TIMESTAMP />
 AND TE.WORK_EFFORT_ID = <@param workEffortId />
 AND AC.GL_ACCOUNT_ID = <@param glAccountId />
 GROUP BY AC.GL_ACCOUNT_ID, WM.WORK_EFFORT_MEASURE_ID, TE.WORK_EFFORT_ID
 