SELECT A.*, WM2.WORK_EFFORT_MEASURE_ID AS VOUCHER_REF FROM (
 SELECT AE.AMOUNT, COUNT(AE.AMOUNT) AS COUNT_AMOUNT
 FROM <@table "GL_ACCOUNT_INPUT_CALC"/> PAR
 INNER JOIN <@table "GL_ACCOUNT"/> AC ON AC.GL_ACCOUNT_ID = PAR.GL_ACCOUNT_ID_REF
 INNER JOIN <@table "WORK_EFFORT_MEASURE"/> WM ON WM.GL_ACCOUNT_ID = PAR.GL_ACCOUNT_ID_REF AND WM.WORK_EFFORT_ID = <@param workEffortId />
 INNER JOIN <@table "ACCTG_TRANS_ENTRY"/> AE ON AE.GL_ACCOUNT_ID = PAR.GL_ACCOUNT_ID_REF 
  AND ((PAR.GL_FISCAL_TYPE_ID IS NOT NULL AND AE.GL_FISCAL_TYPE_ID = PAR.GL_FISCAL_TYPE_ID) OR (PAR.GL_FISCAL_TYPE_ID IS NULL AND AE.GL_FISCAL_TYPE_ID = <@param glFiscalTypeId />))
  AND ((AC.INPUT_ENUM_ID = 'ACCINP_OBJ' AND AE.VOUCHER_REF = WM.WORK_EFFORT_MEASURE_ID) OR AC.INPUT_ENUM_ID <> 'ACCINP_OBJ')
  AND AE.AMOUNT IS NOT NULL
 INNER JOIN <@table "ACCTG_TRANS"/> AT ON AT.ACCTG_TRANS_ID = AE.ACCTG_TRANS_ID AND AT.TRANSACTION_DATE = <@param refDate jdbcType.TIMESTAMP />
 WHERE PAR.GL_ACCOUNT_ID = <@param glAccountId />
 GROUP BY AE.AMOUNT) A
LEFT OUTER JOIN <@table "WORK_EFFORT_MEASURE"/> WM2 ON WM2.GL_ACCOUNT_ID = <@param glAccountId /> AND WM2.WORK_EFFORT_ID = <@param workEffortId />
ORDER BY A.COUNT_AMOUNT DESC, A.AMOUNT DESC