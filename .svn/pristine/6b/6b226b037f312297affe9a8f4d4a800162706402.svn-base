SELECT 
  WE.ORG_UNIT_ID, 
  WE.ORG_UNIT_ROLE_TYPE_ID,
 <#if aggregType?if_exists == 'COUNT'>
   COUNT(TE.AMOUNT) AS AMOUNT
 <#elseif aggregType?if_exists == 'MAX'> 
   MAX(TE.AMOUNT) AS AMOUNT
 <#elseif aggregType?if_exists == 'MIN'> 
   MIN(TE.AMOUNT) AS AMOUNT
 <#elseif aggregType?if_exists == 'MEDIA'>
   ROUND(SUM(TE.AMOUNT)/COUNT(TE.AMOUNT), UM.DECIMAL_SCALE) AS AMOUNT
 <#else>
   SUM(TE.AMOUNT) AS AMOUNT
 </#if>
FROM <@table "GL_ACCOUNT"/> AC
INNER JOIN <@table "GL_ACCOUNT_INPUT_CALC"/> IC ON IC.GL_ACCOUNT_ID = AC.GL_ACCOUNT_ID
INNER JOIN <@table "UOM"/> UM ON UM.UOM_ID = AC.DEFAULT_UOM_ID
INNER JOIN <@table "WORK_EFFORT_MEASURE"/> WM ON WM.GL_ACCOUNT_ID = IC.GL_ACCOUNT_ID_REF
INNER JOIN <@table "WORK_EFFORT"/> WE ON WE.WORK_EFFORT_ID = WM.WORK_EFFORT_ID AND WE.WORK_EFFORT_SNAPSHOT_ID IS NULL
INNER JOIN <@table "ACCTG_TRANS_ENTRY"/> TE ON TE.VOUCHER_REF = WM.WORK_EFFORT_MEASURE_ID AND TE.AMOUNT IS NOT NULL
INNER JOIN <@table "ACCTG_TRANS"/> AT ON AT.ACCTG_TRANS_ID = TE.ACCTG_TRANS_ID
WHERE AC.GL_ACCOUNT_ID = <@param glAccountId />
AND AT.GL_FISCAL_TYPE_ID = <@param glFiscalTypeId />
AND AT.TRANSACTION_DATE = <@param refDate jdbcType.TIMESTAMP />
<#if orgUnitId?has_content>
  AND WE.ORG_UNIT_ID = <@param orgUnitId />
</#if>
GROUP BY WE.ORG_UNIT_ID, WE.ORG_UNIT_ROLE_TYPE_ID
