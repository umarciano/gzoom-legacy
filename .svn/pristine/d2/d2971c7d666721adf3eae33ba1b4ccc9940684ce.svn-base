CREATE OR REPLACE
	VIEW PARTY_ROLLUP0_VIEW AS SELECT
		PREL.PARTY_ID_TO AS PARTY_ID_ROOT,
		PREL.ROLE_TYPE_ID_TO AS ROLE_TYPE_ID_ROOT,
		PREL.PARTY_ID_TO AS PARTY_ID_FROM,
		PREL.ROLE_TYPE_ID_TO AS ROLE_TYPE_ID_FROM,
		PREL.PARTY_ID_TO AS PARTY_ID_TO,
		PREL.ROLE_TYPE_ID_TO AS ROLE_TYPE_ID_TO,
		PREL.FROM_DATE,
		PREL.THRU_DATE,
		0 AS TREE_LEVEL
	FROM
		PARTY_RELATIONSHIP PREL
	WHERE
		PREL.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
		AND PREL.ROLE_TYPE_ID_TO <> 'INTERNAL_ORGANIZATIO';

CREATE OR REPLACE
	VIEW PARTY_ROLLUP1_VIEW AS SELECT
		P0.PARTY_ID_ROOT,
		P0.ROLE_TYPE_ID_ROOT,
		PREL.PARTY_ID_FROM,
		PREL.ROLE_TYPE_ID_FROM,
		PREL.PARTY_ID_TO,
		PREL.ROLE_TYPE_ID_TO,
		CASE
			WHEN P0.FROM_DATE > PREL.FROM_DATE THEN P0.FROM_DATE
			ELSE PREL.FROM_DATE
		END AS FROM_DATE,
		CASE
			WHEN P0.THRU_DATE < PREL.THRU_DATE THEN P0.THRU_DATE
			ELSE PREL.THRU_DATE
		END AS THRU_DATE,
		1 AS TREE_LEVEL
	FROM
		PARTY_ROLLUP0_VIEW P0
	INNER JOIN PARTY_RELATIONSHIP PREL ON
		PREL.PARTY_ID_FROM = P0.PARTY_ID_TO
		AND PREL.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
		AND PREL.ROLE_TYPE_ID_FROM = P0.ROLE_TYPE_ID_TO
		AND(
			PREL.THRU_DATE IS NULL
			OR P0.FROM_DATE <= PREL.THRU_DATE
		)
		AND(
			P0.THRU_DATE IS NULL
			OR P0.THRU_DATE >= PREL.FROM_DATE
		);

CREATE OR REPLACE
	VIEW PARTY_ROLLUP2_VIEW AS SELECT
		P0.PARTY_ID_ROOT,
		P0.ROLE_TYPE_ID_ROOT,
		PREL.PARTY_ID_FROM,
		PREL.ROLE_TYPE_ID_FROM,
		PREL.PARTY_ID_TO,
		PREL.ROLE_TYPE_ID_TO,
		CASE
			WHEN P0.FROM_DATE > PREL.FROM_DATE THEN P0.FROM_DATE
			ELSE PREL.FROM_DATE
		END AS FROM_DATE,
		CASE
			WHEN P0.THRU_DATE < PREL.THRU_DATE THEN P0.THRU_DATE
			ELSE PREL.THRU_DATE
		END AS THRU_DATE,
		2 AS TREE_LEVEL
	FROM
		PARTY_ROLLUP1_VIEW P0
	INNER JOIN PARTY_RELATIONSHIP PREL ON
		PREL.PARTY_ID_FROM = P0.PARTY_ID_TO
		AND PREL.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
		AND PREL.ROLE_TYPE_ID_FROM = P0.ROLE_TYPE_ID_TO
		AND(
			PREL.THRU_DATE IS NULL
			OR P0.FROM_DATE <= PREL.THRU_DATE
		)
		AND(
			P0.THRU_DATE IS NULL
			OR P0.THRU_DATE >= PREL.FROM_DATE
		);

CREATE OR REPLACE
	VIEW PARTY_ROLLUP3_VIEW AS SELECT
		P0.PARTY_ID_ROOT,
		P0.ROLE_TYPE_ID_ROOT,
		PREL.PARTY_ID_FROM,
		PREL.ROLE_TYPE_ID_FROM,
		PREL.PARTY_ID_TO,
		PREL.ROLE_TYPE_ID_TO,
		CASE
			WHEN P0.FROM_DATE > PREL.FROM_DATE THEN P0.FROM_DATE
			ELSE PREL.FROM_DATE
		END AS FROM_DATE,
		CASE
			WHEN P0.THRU_DATE < PREL.THRU_DATE THEN P0.THRU_DATE
			ELSE PREL.THRU_DATE
		END AS THRU_DATE,
		3 AS TREE_LEVEL
	FROM
		PARTY_ROLLUP2_VIEW P0
	INNER JOIN PARTY_RELATIONSHIP PREL ON
		PREL.PARTY_ID_FROM = P0.PARTY_ID_TO
		AND PREL.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
		AND PREL.ROLE_TYPE_ID_FROM = P0.ROLE_TYPE_ID_TO
		AND(
			PREL.THRU_DATE IS NULL
			OR P0.FROM_DATE <= PREL.THRU_DATE
		)
		AND(
			P0.THRU_DATE IS NULL
			OR P0.THRU_DATE >= PREL.FROM_DATE
		);

CREATE OR REPLACE
	VIEW PARTY_ROLLUP4_VIEW AS SELECT
		P0.PARTY_ID_ROOT,
		P0.ROLE_TYPE_ID_ROOT,
		PREL.PARTY_ID_FROM,
		PREL.ROLE_TYPE_ID_FROM,
		PREL.PARTY_ID_TO,
		PREL.ROLE_TYPE_ID_TO,
		CASE
			WHEN P0.FROM_DATE > PREL.FROM_DATE THEN P0.FROM_DATE
			ELSE PREL.FROM_DATE
		END AS FROM_DATE,
		CASE
			WHEN P0.THRU_DATE < PREL.THRU_DATE THEN P0.THRU_DATE
			ELSE PREL.THRU_DATE
		END AS THRU_DATE,
		4 AS TREE_LEVEL
	FROM
		PARTY_ROLLUP3_VIEW P0
	INNER JOIN PARTY_RELATIONSHIP PREL ON
		PREL.PARTY_ID_FROM = P0.PARTY_ID_TO
		AND PREL.PARTY_RELATIONSHIP_TYPE_ID = 'GROUP_ROLLUP'
		AND PREL.ROLE_TYPE_ID_FROM = P0.ROLE_TYPE_ID_TO
		AND(
			PREL.THRU_DATE IS NULL
			OR P0.FROM_DATE <= PREL.THRU_DATE
		)
		AND(
			P0.THRU_DATE IS NULL
			OR P0.THRU_DATE >= PREL.FROM_DATE
		);

CREATE OR REPLACE
	VIEW PARTY_ROLLUP_VIEW AS SELECT
		*
	FROM
		PARTY_ROLLUP0_VIEW
UNION ALL SELECT
		*
	FROM
		PARTY_ROLLUP1_VIEW
UNION ALL SELECT
		*
	FROM
		PARTY_ROLLUP2_VIEW
UNION ALL SELECT
		*
	FROM
		PARTY_ROLLUP3_VIEW
UNION ALL SELECT
		*
	FROM
		PARTY_ROLLUP4_VIEW;
