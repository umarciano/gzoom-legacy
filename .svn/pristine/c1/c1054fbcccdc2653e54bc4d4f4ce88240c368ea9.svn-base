SELECT A.WORK_EFFORT_ID, A.WORK_EFFORT_MEASURE_ID, A.UOM_RANGE_ID, A.UOM_DESCR, A.UOM_DESCR_LANG, A.GL_ACCOUNT_ID, A.PRODUCT_ID, A.EMPL_POSITION_TYPE_ID,
A.ROLE_TYPE_ID AS MEASURE_ROLE_TYPE_ID, A.PARTY_ID AS MEASURE_PARTY_ID, A.WE_MEASURE_TYPE_ENUM_ID, A.WE_OTHER_GOAL_ENUM_ID, 
A.FROM_DATE, A.THRU_DATE, 

<#if mostraMovimenti>
    <#if mostraPossibiliPeriodi>
        P.FROM_DATE AS P_FROM_DATE, P.THRU_DATE AS P_THRU_DATE,
    <#else>
        NULL AS P_FROM_DATE,
        NULL AS P_THRU_DATE, 
    </#if>
<#else>
    NULL AS P_FROM_DATE,
    NULL AS P_THRU_DATE,
</#if>

B.SOURCE_REFERENCE_ID,
B.WORK_EFFORT_NAME, B.ETCH, B.WORK_EFFORT_TYPE_ID,D.ACT_ST_ENUM_ID, E.ACCOUNT_CODE, E.ACCOUNT_NAME, E.ACCOUNT_NAME_LANG,
F.UOM_TYPE_ID,
F.ABBREVIATION,
F.ABBREVIATION_LANG,
A.WE_SCORE_CONV_ENUM_ID AS WE_SCORE_CONV_ENUM_ID,
<#if mostraMovimenti>
G.TM_AMOUNT AS B_AMOUNT, 
<#if onlyWithBudget>
G2.TM_AMOUNT AS BUDGET_AMOUNT,
</#if>
G.TT_TRANSACTION_DATE AS A_TRANSACTION_DATE, 
G.TT_GL_FISCAL_TYPE_ID AS A_GL_FISCAL_TYPE_ID,
G.TT_FISCAL_TYPE_DESCRIPTION AS C_DESCRIPTION, 
G.TT_FISCAL_TYPE_DESCR_LANG AS C_DESCRIPTION_LANG,
G.TT_DESCRIPTION AS A_DESCRIPTION, 
G.TT_DESCRIPTION_LANG AS A_DESCRIPTION_LANG,
G.TM_DESCRIPTION AS B_DESCRIPTION,
G.TM_DESCRIPTION_LANG AS B_DESCRIPTION_LANG,
G.TM_ACCTG_TRANS_ID AS A_ACCTG_TRANS_ID, 
G.TM_ACCTG_TRANS_ENTRY_SEQ_ID AS B_ACCTG_TRANS_ENTRY_SEQ_ID, H.DESCRIPTION,
G.R_UOM_CODE AS UOM_CODE,
G.R_UOM_CODE_LANG AS UOM_CODE_LANG,
G.R_UOM_DESCR AS UOM_DESCR, 

<#if mostraPossibiliPeriodi>
P.CUSTOM_TIME_PERIOD_ID AS CUSTOM_TIME_PERIOD_ID, 
P.PERIOD_NAME AS PERIOD_NAME, 
P.IS_CLOSED AS IS_CLOSED,
<#else>
NULL AS CUSTOM_TIME_PERIOD_ID,
</#if>

G.TM_DEBIT_CREDIT_FLAG AS DEBIT_CREDIT_FLAG,
<#else>
NULL AS B_AMOUNT,
NULL AS A_TRANSACTION_DATE, 
NULL AS A_GL_FISCAL_TYPE_ID,
NULL AS C_DESCRIPTION, 
NULL AS C_DESCRIPTION_LANG,
NULL AS A_DESCRIPTION, 
NULL AS A_DESCRIPTION_LANG, 
NULL AS B_DESCRIPTION, 
NULL AS B_DESCRIPTION_LANG,
NULL AS A_ACCTG_TRANS_ID, 
NULL AS B_ACCTG_TRANS_ENTRY_SEQ_ID,
NULL AS DESCRIPTION,
NULL AS UOM_CODE,
NULL AS UOM_CODE_LANG,
NULL AS UOM_DESCR, 
NULL AS CUSTOM_TIME_PERIOD_ID,
NULL AS PERIOD_NAME,
NULL AS IS_CLOSED,
NULL AS DEBIT_CREDIT_FLAG,
</#if>

E.DEBIT_CREDIT_DEFAULT,
E.PERIODICAL_ABSOLUTE_ENUM_ID,

<#if mostraMovimenti>
G.G_PERIODICAL_ABSOLUTE_ENUM_ID AS PERIODICAL_ABSOLUTE_ENUM_ID,
<#else>
NULL AS PERIODICAL_ABSOLUTE_ENUM_ID,
</#if>

E.GL_RESOURCE_TYPE_ID 
,A.GL_ACCOUNT_ID
,E.GL_ACCOUNT_TYPE_ID
,E.DESCRIPTION AS ACCOUNT_DESCRIPTION
,E.DESCRIPTION_LANG AS ACCOUNT_DESCRIPTION_LANG  
,E.DETAIL_ENUM_ID
,E.INPUT_ENUM_ID
,E.DETECT_ORG_UNIT_ID_FLAG
,E.DATA_SOURCE_ID
,E.DEFAULT_UOM_ID
,A.COMMENTS
,A.SEQUENCE_ID
,F.DECIMAL_SCALE
,A.KPI_SCORE_WEIGHT
,A.KPI_OTHER_WEIGHT
,A.DATA_SOURCE_ID
,E.ACCOUNT_TYPE_ENUM_ID  
,B.ORG_UNIT_ROLE_TYPE_ID
,B.ORG_UNIT_ID

<#if mostraMovimenti>
,G.G_CURRENCY_UOM_ID AS B_CURRENCY_UOM_ID
,G.G_PERF_AMOUNT_CALC AS B_PERF_AMOUNT_CALC

,G.G_HAS_SCORE_ALERT AS B_HAS_SCORE_ALERT 
,G.TM_GL_ACCOUNT_ID AS B_GL_ACCOUNT_ID  
,G.G_WORK_EFFORT_SNAPSHOT_ID AS A_WORK_EFFORT_SNAPSHOT_ID
,G.TM_GL_FISCAL_TYPE_ID AS B_GL_FISCAL_TYPE_ID  
,G.TM_VOUCHER_REF AS B_VOUCHER_REF
,G.TT_IS_POSTED AS IS_POSTED

,G.TT_PARTY_ID AS PARTY_ID
,G.TT_ROLE_TYPE_ID AS ROLE_TYPE_ID 
,G.TM_PARTY_ID AS ENTRY_PARTY_ID
,G.TM_ROLE_TYPE_ID AS ENTRY_ROLE_TYPE_ID

<#else>
,NULL AS B_CURRENCY_UOM_ID
,NULL AS B_PERF_AMOUNT_CALC

,NULL AS B_HAS_SCORE_ALERT 
,NULL AS B_GL_ACCOUNT_ID  
,NULL AS A_WORK_EFFORT_SNAPSHOT_ID
,NULL AS B_GL_FISCAL_TYPE_ID  
,NULL AS B_VOUCHER_REF
,NULL AS IS_POSTED
,NULL AS PARTY_ID
,NULL AS ROLE_TYPE_ID 
,NULL AS ENTRY_PARTY_ID
,NULL AS ENTRY_ROLE_TYPE_ID
</#if>
<#if mostraSoggetti> 
,GR.PARTY_ID AS GR_PARTY_ID
,GR.ROLE_TYPE_ID AS GR_ROLE_TYPE_ID
,M.PARTY_NAME
</#if>

,DT.DATA_SOURCE_ID AS DATA_SOURCE_ID, DT.VAL_MOD_ID AS VAL_MOD_ID, DTP.DATA_SOURCE_ID AS WM_DATA_SOURCE_ID, DTP.VAL_MOD_ID AS WM_VAL_MOD_ID,
CASE WHEN (INPUT_ENUM_ID = 'ACCINP_OBJ' OR INPUT_ENUM_ID = 'ACCINP_UO') THEN E.RESP_CENTER_ROLE_TYPE_ID ELSE B.ORG_UNIT_ROLE_TYPE_ID END AS ORG_UNIT_ROLE_TYPE_ID,
CASE WHEN (INPUT_ENUM_ID = 'ACCINP_OBJ' OR INPUT_ENUM_ID = 'ACCINP_UO') THEN E.RESP_CENTER_ID ELSE B.ORG_UNIT_ID END AS ORG_UNIT_ID,
VGT.GL_FISCAL_TYPE_ID AS GT_GL_FISCAL_TYPE_ID,
VGL.DESCRIPTION AS GT_DESCRIPTION, VGL.DESCRIPTION_LANG AS GT_DESCRIPTION_LANG,
VGL.GL_FISCAL_TYPE_ENUM_ID AS GT_GL_FISCAL_TYPE_ENUM_ID,
GLT.DESCRIPTION AS GLT_DESCR, DC.DESCRIPTION AS DC_DESCR

FROM <@table "WORK_EFFORT_MEASURE"/> A
LEFT OUTER JOIN <@table "PRODUCT"/> H ON A.PRODUCT_ID = H.PRODUCT_ID

INNER JOIN <@table "WORK_EFFORT"/> B ON A.WORK_EFFORT_ID = B.WORK_EFFORT_ID
INNER JOIN <@table "STATUS_ITEM"/> D ON B.CURRENT_STATUS_ID = D.STATUS_ID
INNER JOIN <@table "GL_ACCOUNT"/> E ON A.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID
LEFT OUTER JOIN <@table "GL_ACCOUNT_ORGANIZATION"/> GAO ON GAO.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID

INNER JOIN <@table "GL_ACCOUNT_TYPE_GL_FISCAL_TYPE"/> VGT ON VGT.GL_ACCOUNT_TYPE_ID = E.GL_ACCOUNT_TYPE_ID
INNER JOIN <@table "GL_FISCAL_TYPE"/> VGL ON VGL.GL_FISCAL_TYPE_ID = VGT.GL_FISCAL_TYPE_ID
INNER JOIN <@table "UOM"/> F ON E.DEFAULT_UOM_ID = F.UOM_ID
INNER JOIN <@table "WORK_EFFORT_TYPE_CONTENT"/> WTIC ON WTIC.WORK_EFFORT_TYPE_ID = B.WORK_EFFORT_TYPE_ID
INNER JOIN <@table "WORK_EFFORT_PURPOSE_ACCOUNT"/> WA ON WA.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID
    AND WA.WORK_EFFORT_PURPOSE_TYPE_ID =  WTIC.WORK_EFFORT_PURPOSE_TYPE_ID
INNER JOIN <@table "GL_ACCOUNT_TYPE"/> GLT ON GLT.GL_ACCOUNT_TYPE_ID = E.GL_ACCOUNT_TYPE_ID
INNER JOIN <@table "ENUMERATION"/> DC ON DC.ENUM_ID = E.DEBIT_CREDIT_DEFAULT

<#if mostraMovimenti>
    <#if mostraPossibiliPeriodi>
        LEFT OUTER JOIN <@table "CUSTOM_TIME_PERIOD"/> P ON A. PERIOD_TYPE_ID = P.PERIOD_TYPE_ID
    </#if>
</#if>

LEFT OUTER JOIN <@table "DATA_SOURCE"/> DT ON DT.DATA_SOURCE_ID = E.DATA_SOURCE_ID

LEFT OUTER JOIN <@table "DATA_SOURCE"/> DTP ON DTP.DATA_SOURCE_ID = A.DATA_SOURCE_ID

<#if mostraSoggetti> 
LEFT OUTER JOIN <@table "GL_ACCOUNT_ROLE"/> GR ON GR.ROLE_TYPE_ID = E.ROLE_TYPE_ID AND GR.GL_ACCOUNT_ID = E.GL_ACCOUNT_ID
</#if>


<#if mostraMovimenti>
    <#if "OBJ" == accountFilter>
        LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_OBJ_VIEW"/> G
    <#elseif "NOOBJ" == accountFilter>
        LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_NOOBJ_VIEW"/> G
    <#else>
        LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_ALL_VIEW"/> G
    </#if>
  		ON
  
		G.M_WORK_EFFORT_MEASURE_ID = A.WORK_EFFORT_MEASURE_ID      
  
  		AND G.TT_GL_FISCAL_TYPE_ID = VGT.GL_FISCAL_TYPE_ID
    
    <#if mostraSoggetti>
    	AND ((GR.ROLE_TYPE_ID = G.B_ROLE_TYPE_ID AND GR.PARTY_ID = G.B_PARTY_ID)
         OR (G.B_ROLE_TYPE_ID IS NULL AND G.B_PARTY_ID IS NULL))

  	</#if>
  
  	<#if mostraPossibiliPeriodi>
        AND P.FROM_DATE <= G.TT_TRANSACTION_DATE
        AND P.THRU_DATE >= G.TT_TRANSACTION_DATE
    </#if>
          

    <#if onlyWithBudget>
    	<#if "OBJ" == accountFilter>
        	LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_OBJ_VIEW"/> G2
        <#elseif "NOOBJ" == accountFilter>
        	LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_NOOBJ_VIEW"/> G2
        <#else>
        	LEFT OUTER JOIN <@table "WORK_EFFORT_TRANS_ALL_VIEW"/> G2
    	</#if>
        	ON G2.M_WORK_EFFORT_MEASURE_ID = A.WORK_EFFORT_MEASURE_ID      
    
        	AND G2.TT_GL_FISCAL_TYPE_ID = 'BUDGET'
   
        	<#if mostraPossibiliPeriodi>
           		AND P.FROM_DATE <= G2.TT_TRANSACTION_DATE
           		AND P.THRU_DATE >= G2.TT_TRANSACTION_DATE
            </#if>
            
    </#if>
    
    <#if mostraSoggetti>
    	LEFT OUTER JOIN <@table "PARTY"/> M     ON GR.PARTY_ID     = M.PARTY_ID
    </#if>
    
</#if>
    
WHERE A.WORK_EFFORT_ID = <@param workEffortId />
<#if contentId?if_exists?has_content>
    AND WTIC.CONTENT_ID = <@param contentId />
</#if>
<#if weTransCurrencyUomId?if_exists?has_content>
    AND E.DEFAULT_UOM_ID = <@param weTransCurrencyUomId />
</#if>
<#if workEffortMeasureId?if_exists?has_content>
    AND A.WORK_EFFORT_MEASURE_ID = <@param workEffortMeasureId />
</#if>
<#if notWorkEffortMeasureId?if_exists?has_content>
AND A.WORK_EFFORT_MEASURE_ID <> <@param workEffortMeasureId />
</#if>
<#if glFiscalTypeId?if_exists?has_content>
    AND VGT.GL_FISCAL_TYPE_ID = <@param glFiscalTypeId />
</#if>
<#if organizationId?if_exists?has_content>
    AND GAO.ORGANIZATION_PARTY_ID = <@param organizationId />
</#if>
<#if mostraMovimenti>
<#if customTimePeriodIdList?if_exists?has_content>
    AND P.CUSTOM_TIME_PERIOD_ID IN ( 
         <#list customTimePeriodIdList as customTimePeriodId>
             <@param customTimePeriodId />,
         </#list>
         'NULL'
    )
    
    <#if fromDate?if_exists?has_content>
        AND A.FROM_DATE <= <@param thruDate jdbcType.TIMESTAMP /> 
    </#if>
    <#if thruDate?if_exists?has_content>
        AND A.THRU_DATE >= <@param fromDate jdbcType.TIMESTAMP />
    </#if>
<#else>
    AND G.TT_TRANSACTION_DATE IS NOT NULL
</#if>
</#if>
AND (A.IS_INVISIBLE IS NULL OR A.IS_INVISIBLE <> 'Y')
ORDER BY A.SEQUENCE_ID, E.ACCOUNT_CODE, A.WORK_EFFORT_MEASURE_ID
<#if mostraMovimenti>
, VGT.SEQUENCE_ID
</#if> 
<#if mostraSoggetti> 
, GR.PARTY_ID 
</#if>
<#if mostraMovimenti>
, VGT.GL_FISCAL_TYPE_ID 
    <#if mostraPossibiliPeriodi>
        , P.FROM_DATE
    </#if>
</#if>