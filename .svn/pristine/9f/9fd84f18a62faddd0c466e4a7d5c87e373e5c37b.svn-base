SELECT 
    W.WORK_EFFORT_ID,
    W.WORK_EFFORT_PARENT_ID,
    WF.WORK_EFFORT_PARENT_ID AS WORK_EFFORT_PARENT_ID_FROM,
    A.WORK_EFFORT_ID_FROM,
    A.WORK_EFFORT_ID_TO,
    A.ASSOC_WEIGHT,
    A.WORK_EFFORT_ASSOC_TYPE_ID,
    T.HIERARCHY_ASSOC_TYPE_ID,
    A.FROM_DATE,
    A.THRU_DATE,
    W.WEIGHT_KPI,
    W.WEIGHT_SONS,
    W.WEIGHT_REVIEW
FROM
    ((<@table "WORK_EFFORT_ASSOC"/> A
    INNER JOIN <@table "WORK_EFFORT"/> W ON A.WORK_EFFORT_ID_TO = W.WORK_EFFORT_ID)
    INNER JOIN <@table "WORK_EFFORT"/> WF ON A.WORK_EFFORT_ID_FROM = WF.WORK_EFFORT_ID)
        INNER JOIN
    <@table "WORK_EFFORT_TYPE"/> T ON WF.WORK_EFFORT_TYPE_ID = T.WORK_EFFORT_TYPE_ID
    INNER JOIN <@table "STATUS_ITEM"/> S ON S.STATUS_ID = W.CURRENT_STATUS_ID
WHERE
    (A.WORK_EFFORT_ID_FROM = <@param scoreCard />
        AND W.WORK_EFFORT_PARENT_ID = WF.WORK_EFFORT_PARENT_ID
        <#if rootHierarchyAssocTypeId?has_content>
            AND A.WORK_EFFORT_ASSOC_TYPE_ID = <@param rootHierarchyAssocTypeId />
        <#else>
            AND A.WORK_EFFORT_ASSOC_TYPE_ID IS NULL
        </#if>
        AND A.FROM_DATE <= <@param thruDate jdbcType.TIMESTAMP />
        AND A.THRU_DATE >= <@param fromDate jdbcType.TIMESTAMP />
        <#if organizationId?has_content>
           AND 	W.ORGANIZATION_ID = <@param organizationId />
        </#if>)
        AND ((A.ASSOC_WEIGHT IS NOT NULL
        AND A.ASSOC_WEIGHT <> '-1.0'))
        AND S.ACT_ST_ENUM_ID <> 'ACTSTATUS_REPLACED'

AND NOT EXISTS (SELECT M.WORK_EFFORT_ID
FROM <@table "WORK_EFFORT_MEASURE"/> M 
INNER JOIN <@table "ACCTG_TRANS"/> T ON M.WORK_EFFORT_MEASURE_ID = T.VOUCHER_REF 
AND ((M.WE_MEASURE_TYPE_ENUM_ID = 'WEMT_SCORE' AND M.GL_ACCOUNT_ID = 'SCORE')) 
WHERE (T.GL_FISCAL_TYPE_ID = <@param scoreValueType /> AND T.TRANSACTION_DATE = <@param thruDate jdbcType.TIMESTAMP />
	AND M.WORK_EFFORT_ID = W.WORK_EFFORT_ID
) 
GROUP BY M.WORK_EFFORT_ID, M.FROM_DATE, M.THRU_DATE, T.GL_FISCAL_TYPE_ID, T.TRANSACTION_DATE 
)